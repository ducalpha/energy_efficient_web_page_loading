diff --git a/base/assisted_scheduling/assisted_scheduler.h b/base/assisted_scheduling/assisted_scheduler.h
index fc9dd60..f3a0517 100644
--- a/base/assisted_scheduling/assisted_scheduler.h
+++ b/base/assisted_scheduling/assisted_scheduler.h
@@ -49,6 +49,10 @@ class BASE_EXPORT AssistedScheduler {
     return mode_;
   }
 
+  bool Enabled() const {
+    return enabled_;
+  }
+
  private:
   // Set current mode and scheduler threads accordingly
   // Return true if current mode changed
diff --git a/content/browser/renderer_host/render_widget_host_view_android.cc b/content/browser/renderer_host/render_widget_host_view_android.cc
index d00a4d1..40acc1a 100644
--- a/content/browser/renderer_host/render_widget_host_view_android.cc
+++ b/content/browser/renderer_host/render_widget_host_view_android.cc
@@ -7,6 +7,7 @@
 #include <android/bitmap.h>
 
 #include "base/android/build_info.h"
+#include "base/assisted_scheduling/qos_monitor.h"
 #include "base/basictypes.h"
 #include "base/bind.h"
 #include "base/callback_helpers.h"
@@ -1272,9 +1273,18 @@ void RenderWidgetHostViewAndroid::SendBeginFrame(base::TimeTicks frame_time,
 
   base::TimeTicks deadline = display_time - estimated_browser_composite_time;
 
-  host_->Send(new ViewMsg_BeginFrame(
-      host_->GetRoutingID(),
-      cc::BeginFrameArgs::Create(frame_time, deadline, vsync_period)));
+  // ducalpha: update renderer the new fps_limit only when QosMonitor on renderer process is enabled
+  // that means the AssistedScheduler on the browser process in enabled
+  if (base::AssistedScheduler::GetInstance()->Enabled()) {
+    host_->Send(new ViewMsg_BeginFrameWithQosInfo(
+        host_->GetRoutingID(),
+        cc::BeginFrameArgs::Create(frame_time, deadline, vsync_period),
+        content_view_core_->GetWindowAndroid()->FpsLimit()));
+  } else { // original
+    host_->Send(new ViewMsg_BeginFrame(
+        host_->GetRoutingID(),
+        cc::BeginFrameArgs::Create(frame_time, deadline, vsync_period)));
+  }
 }
 
 bool RenderWidgetHostViewAndroid::Animate(base::TimeTicks frame_time) {
diff --git a/content/common/view_messages.h b/content/common/view_messages.h
index 928251e..daa7dfb 100644
--- a/content/common/view_messages.h
+++ b/content/common/view_messages.h
@@ -938,6 +938,12 @@ IPC_MESSAGE_ROUTED0(ViewMsg_ShowImeIfNeeded)
 IPC_MESSAGE_ROUTED1(ViewMsg_BeginFrame,
                     cc::BeginFrameArgs /* args */)
 
+// ducalpha:
+// fps_limit-included ViewMsg_BeginFrame
+IPC_MESSAGE_ROUTED2(ViewMsg_BeginFrameWithQosInfo,
+                    cc::BeginFrameArgs /* args */,
+                    int /* fps_limit*/)
+
 // Sent by the browser when an IME update that requires acknowledgement has been
 // processed on the browser side.
 IPC_MESSAGE_ROUTED0(ViewMsg_ImeEventAck)
diff --git a/content/renderer/gpu/compositor_output_surface.cc b/content/renderer/gpu/compositor_output_surface.cc
index d5badf1..abc857f 100644
--- a/content/renderer/gpu/compositor_output_surface.cc
+++ b/content/renderer/gpu/compositor_output_surface.cc
@@ -42,6 +42,7 @@ IPC::ForwardingMessageFilter* CompositorOutputSurface::CreateFilter(
     ViewMsg_SwapCompositorFrameAck::ID,
     ViewMsg_ReclaimCompositorResources::ID,
 #if defined(OS_ANDROID)
+    ViewMsg_BeginFrameWithQosInfo::ID,
     ViewMsg_BeginFrame::ID
 #endif
   };
@@ -210,6 +211,7 @@ void CompositorOutputSurface::OnMessageReceived(const IPC::Message& message) {
     IPC_MESSAGE_HANDLER(ViewMsg_ReclaimCompositorResources, OnReclaimResources);
 #if defined(OS_ANDROID)
     IPC_MESSAGE_HANDLER(ViewMsg_BeginFrame, OnBeginFrame);
+    IPC_MESSAGE_HANDLER(ViewMsg_BeginFrameWithQosInfo, OnBeginFrameWithQosInfo);
 #endif
   IPC_END_MESSAGE_MAP()
 }
@@ -240,6 +242,14 @@ void CompositorOutputSurface::OnBeginFrame(const cc::BeginFrameArgs& args) {
   DCHECK(CalledOnValidThread());
   client_->BeginFrame(args);
 }
+
+// ducalpha
+void CompositorOutputSurface::OnBeginFrameWithQosInfo(const cc::BeginFrameArgs& args,
+                                                      int fps_limit) {
+  OnBeginFrame(args);
+
+  base::QosMonitor::GetInstance()->SetRequiredFps(fps_limit);
+}
 #endif  // defined(OS_ANDROID)
 
 void CompositorOutputSurface::OnSwapAck(uint32 output_surface_id,
diff --git a/content/renderer/gpu/compositor_output_surface.h b/content/renderer/gpu/compositor_output_surface.h
index 516e211..90c19aa 100644
--- a/content/renderer/gpu/compositor_output_surface.h
+++ b/content/renderer/gpu/compositor_output_surface.h
@@ -106,6 +106,7 @@ class CompositorOutputSurface
                                           base::TimeDelta interval);
 #if defined(OS_ANDROID)
   void OnBeginFrame(const cc::BeginFrameArgs& args);
+  void OnBeginFrameWithQosInfo(const cc::BeginFrameArgs& args, int fps_limit);
 #endif
   bool Send(IPC::Message* message);
 
